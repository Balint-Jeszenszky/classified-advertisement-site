openapi: 3.0.0
x-stoplight:
  id: 9weg4btfsgusa
info:
  title: external
  version: '1.0'
  contact:
    name: Balint Jeszenszky
  description: Classified advertisement site advertisement microservice external api
servers:
  - url: 'http://localhost:8082/api/advertisement'
paths:
  '/advertisement/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - advertisement
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvertisementResponse'
        '404':
          description: Not Found
      operationId: get-advertisement-id
      description: Get a single advertisement by id
    put:
      summary: ''
      operationId: put-advertisement-id
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvertisementResponse'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
      description: Edit an advertisement by id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvertisementRequest'
      tags:
        - advertisement
    delete:
      summary: ''
      operationId: delete-advertisement-id
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
      description: Delete an advertisement by id
      tags:
        - advertisement
  /advertisements:
    get:
      summary: Your GET endpoint
      tags:
        - advertisement
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdvertisementResponse'
      operationId: get-advertisements
      description: List all advertisements
    parameters: []
    post:
      summary: ''
      operationId: post-advertisements
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvertisementResponse'
        '400':
          description: Bad Request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvertisementRequest'
      description: Create a new advertisement
      tags:
        - advertisement
  '/advertisement/{id}/comments':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - comment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentResponse'
        '404':
          description: Not Found
      operationId: get-advertisement-id-comment
      description: get all comments for an advertisement
    post:
      summary: ''
      operationId: post-advertisement-id-comment
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentResponse'
        '400':
          description: Bad Request
      tags:
        - comment
      description: Create a comment for an advertisement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequest'
  '/comment/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    delete:
      summary: ''
      operationId: delete-advertisement-adId-comment-commentId
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
      tags:
        - comment
      description: Delete a comment by id
  /categories:
    get:
      summary: Your GET endpoint
      tags:
        - category
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryResponse'
      operationId: get-categories
      description: get all categories
    post:
      summary: ''
      operationId: post-categories
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryResponse'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
      tags:
        - category
      description: create a new category
  '/categories/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    put:
      summary: ''
      operationId: put-categories
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryResponse'
        '400':
          description: Bad Request
      tags:
        - category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
      description: Edit a category by id
    delete:
      summary: ''
      operationId: delete-categories
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
      tags:
        - category
      description: Delete a category by id
components:
  schemas:
    AdvertisementResponse:
      title: AdvertisementResponse
      x-stoplight:
        id: v8km5zj6k0ca3
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        advertiserId:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        price:
          type: number
        categoryId:
          type: integer
      required:
        - id
        - title
        - description
        - advertiserId
        - createdAt
        - updatedAt
        - price
    AdvertisementRequest:
      title: AdvertisementRequest
      x-stoplight:
        id: dqpzl662jttxm
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        price:
          type: number
        categoryId:
          type: integer
      required:
        - title
        - description
        - price
        - categoryId
    CommentResponse:
      title: CommentResponse
      x-stoplight:
        id: saht1la8hw3wq
      type: object
      properties:
        id:
          type: integer
        creatorId:
          type: integer
        content:
          type: string
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - creatorId
        - content
        - createdAt
    CommentRequest:
      title: CommentRequest
      x-stoplight:
        id: erwlyj1ia1chl
      type: object
      properties:
        content:
          type: string
      required:
        - content
    CategoryRequest:
      title: CategoryRequest
      x-stoplight:
        id: ol9xijsdgeknm
      type: object
      properties:
        name:
          type: string
        parentCategoryId:
          type: integer
      required:
        - name
    CategoryResponse:
      title: CategoryResponse
      x-stoplight:
        id: 0nf5jdhjm9kt3
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        parentCategoryId:
          type: integer
      required:
        - id
        - name
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
tags:
  - name: advertisement
  - name: category
  - name: comment
security:
  - JWT: []
