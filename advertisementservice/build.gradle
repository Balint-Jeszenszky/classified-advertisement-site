import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.jetbrains.kotlin.jvm' version '1.7.22'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.7.22'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.7.22'
	id 'org.openapi.generator' version '6.5.0'
	id "org.jetbrains.kotlin.kapt" version "1.8.20-RC2"
}

group = 'hu.bme.aut.classifiedadvertisementsite'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.liquibase:liquibase-core'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation "io.swagger.parser.v3:swagger-parser:2.1.12"
	implementation "javax.servlet:servlet-api:2.5"
	implementation "org.hibernate.validator:hibernate-validator:8.0.0.Final"
	implementation "javax.validation:validation-api:2.0.1.Final"
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	implementation "io.minio:minio:8.5.2"
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
	kapt 'org.mapstruct:mapstruct-processor:1.5.3.Final'
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict', '-Xjvm-default=all-compatibility']
		jvmTarget = '17'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

import org.openapitools.generator.gradle.plugin.tasks.GenerateTask
tasks.register("kotlinApi", GenerateTask) {
	kotlinApi.generatorName = "kotlin-spring"
	kotlinApi.inputSpec = "$rootDir/src/main/resources/openapi/external.yaml".toString()
	kotlinApi.outputDir = "$buildDir/generated-sources/openapi".toString()
	kotlinApi.apiPackage = "hu.bme.aut.classifiedadvertisementsite.advertisementservice.api.external"
	kotlinApi.modelPackage = "hu.bme.aut.classifiedadvertisementsite.advertisementservice.api.external.model"
	kotlinApi.configOptions = [
			useTags: "true",
			interfaceOnly: "true",
			skipDefaultInterface: "true"
	]
}

tasks.register("javaApi", GenerateTask) {
	javaApi.generatorName = "spring"
	javaApi.inputSpec = "$rootDir/src/main/resources/openapi/external.yaml".toString()
	javaApi.outputDir = "$buildDir/generated-sources/openapi".toString()
	javaApi.apiPackage = "hu.bme.aut.classifiedadvertisementsite.advertisementservice.java.api.external"
	javaApi.modelPackage = "hu.bme.aut.classifiedadvertisementsite.advertisementservice.java.api.external.model"
	javaApi.configOptions = [
			useTags: "true",
			interfaceOnly: "true",
			skipDefaultInterface: "true"
	]
}

sourceSets {
	main {
		kotlin {
			srcDir("$buildDir/generated-sources/openapi/src/main/kotlin")
		}
	}
}

java.sourceSets["main"].java {
	srcDir("$buildDir/generated-sources/openapi/src/main/java")
}

compileKotlin.dependsOn('kotlinApi', 'javaApi')

test {
	systemProperty 'spring.profiles.active', 'test'
}

jar {
	enabled = false
}
