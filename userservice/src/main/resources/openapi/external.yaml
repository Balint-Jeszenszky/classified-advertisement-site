openapi: 3.0.0
info:
  title: openapi
  version: '1.0'
  contact:
    name: Balint Jeszenszky
  description: Classified advertisement site user service
servers:
  - url: 'http://localhost:8081/api/user/external'
tags:
  - name: authentication
  - name: userManagement
  - name: userProfile
paths:
  /auth/login:
    post:
      summary: ''
      operationId: post-auth-login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailsResponse'
      description: Log in user
      tags:
        - authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
    parameters: []
  /auth/register:
    parameters: []
    post:
      summary: ''
      operationId: post-auth-register
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
      tags:
        - authentication
      description: Register a new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
  /auth/resetPassword:
    put:
      summary: ''
      operationId: put-auth-resetPassword
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad Request
        '403':
          description: Forbidden
      description: Reset password with key from email
      tags:
        - authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
    post:
      summary: ''
      operationId: post-auth-resetPassword
      responses:
        '204':
          description: No Content
      description: Request password reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequest'
      tags:
        - authentication
    parameters: []
  /auth/verifyEmail:
    post:
      summary: ''
      operationId: post-auth-verifyEmail
      responses:
        '204':
          description: No Content
      description: Verify email address
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
      tags:
        - authentication
  '/users/{userId}':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailsResponse'
        '403':
          description: Forbidden
      operationId: get-users-userId
      description: Query details of a user
      tags:
        - userManagement
    put:
      summary: ''
      operationId: put-users-userId
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad Request
        '403':
          description: Forbidden
      description: Modify user data for admin
      tags:
        - userManagement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyUserRequest'
  /users/all:
    get:
      summary: Your GET endpoint
      tags:
        - userManagement
      operationId: get-users-all
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDetailsResponse'
        '403':
          description: Forbidden
      description: list all users for admin
  /profile:
    get:
      summary: Your GET endpoint
      tags:
        - userProfile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailsResponse'
      operationId: get-profile
      description: Get personal profile
    put:
      summary: ''
      operationId: put-profile
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad Request
      description: Modify personal profile
      tags:
        - userProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyProfileRequest'
components:
  schemas:
    UserDetailsResponse:
      title: UserDetailsResponse
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        roles:
          type: array
          items:
            type: string
        enabled:
          type: boolean
      required:
        - id
        - username
        - email
        - roles
        - enabled
    LoginRequest:
      title: LoginRequest
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
      description: ''
    RegistrationRequest:
      title: RegistrationRequest
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
        confirmPassword:
          type: string
      required:
        - username
        - email
        - password
        - confirmPassword
    ModifyUserRequest:
      title: ModifyUserRequest
      x-stoplight:
        id: wsccpy4x86ije
      type: object
      properties:
        email:
          type: string
        roles:
          type: array
          items:
            type: string
        enabled:
          type: boolean
      required:
        - email
        - roles
        - enabled
    ModifyProfileRequest:
      title: ModifyProfileRequest
      x-stoplight:
        id: c34swq186n2a5
      type: object
      properties:
        email:
          type: string
        oldPassword:
          type: string
        newPassword:
          type: string
        confirmNewPassword:
          type: string
      required:
        - email
    ResetPasswordRequest:
      title: ResetPasswordRequest
      x-stoplight:
        id: qkdx9pkh7jvpy
      type: object
      properties:
        key:
          type: string
        password:
          type: string
        confirmPassword:
          type: string
      required:
        - key
        - password
        - confirmPassword
    VerifyEmailRequest:
      title: VerifyEmailRequest
      x-stoplight:
        id: gye7239qp4e8s
      type: object
      properties:
        key:
          type: string
      required:
        - key
    ForgotPasswordRequest:
      title: ForgotPasswordRequest
      x-stoplight:
        id: zry6f1hb094xj
      type: object
      properties:
        email:
          type: string
      required:
        - email
