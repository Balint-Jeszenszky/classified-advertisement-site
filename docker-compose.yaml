services:
  rabbitmq:
    image: rabbitmq:3
    restart: unless-stopped
    container_name: rabbitmq
    volumes:
      - ./container-data/prod/rabbitmq:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    networks:
      - message

  minio:
    image: minio/minio
    restart: unless-stopped
    container_name: minio
    volumes:
      - ./container-data/prod/minio:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command: server --console-address :9001 /data
    networks:
      - storage

  gateway-db:
    image: mysql:8
    restart: unless-stopped
    container_name: gateway-db
    volumes:
      - ./container-data/prod/gateway-mysql:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=gateway
      - MYSQL_ROOT_PASSWORD=${MYSQL_GATEWAY_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_GATEWAY_USERNAME}
      - MYSQL_PASSWORD=${MYSQL_GATEWAY_PASSWORD}
    networks:
      - database

  gateway:
    image: balintjeszenszky/adsite:gateway-latest
    restart: unless-stopped
    container_name: gateway
    depends_on:
      - gateway-db
    ports:
      - 8080:8080
    environment:
      - DATABASE_URL=gateway-db:3306/gateway
      - DB_USER=${MYSQL_GATEWAY_USERNAME}
      - DB_PASS=${MYSQL_GATEWAY_PASSWORD}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
      - JWT_REFRESH_EXPIRATION=${JWT_REFRESH_EXPIRATION}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=8080
      - USER_SERVICE_URI=http://userservice:8080
      - ADVERTISEMENT_SERVICE_URI=http://advertisementservice:8080
      - IMAGE_SERVICE_URI=http://imageprocessingservice:8080
      - WEBSCRAPER_SERVICE_URI=http://webscraperservice:3000
      - NOTIFICATION_SERVICE_URI=http://notificationservice:3000
      - CHAT_SERVICE_URI=http://chatservice:3000
      - BID_SERVICE_URI=http://bidservice:8088
      - FRONTEND_URI=http://frontend:80
    networks:
      - web
      - database

  userservice-db:
    image: postgres:15
    restart: unless-stopped
    container_name: userservice-db
    volumes:
      - ./container-data/prod/userservice-postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${USERSERVICE_POSTGRES_USER}
      - POSTGRES_PASSWORD=${USERSERVICE_POSTGRES_PASSWORD}
      - POSTGRES_DB=users
    networks:
      - database

  userservice:
    image: balintjeszenszky/adsite:userservice-latest
    restart: unless-stopped
    container_name: userservice
    depends_on:
      - userservice-db
      - rabbitmq
    environment:
      - DATABASE_URL=userservice-db:5432/users
      - DB_PASS=${USERSERVICE_POSTGRES_PASSWORD}
      - DB_USER=${USERSERVICE_POSTGRES_USER}
      - PORT=8080
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
    networks:
      - web
      - database
      - message

  advertisementservice-db:
    image: mysql:8
    restart: unless-stopped
    container_name: advertisementservice-db
    volumes:
      - ./container-data/prod/advertisementservice-mysql:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=advertisements
      - MYSQL_ROOT_PASSWORD=${MYSQL_ADVERTISEMENTSERVICE_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_ADVERTISEMENTSERVICE_USERNAME}
      - MYSQL_PASSWORD=${MYSQL_ADVERTISEMENTSERVICE_PASSWORD}
    networks:
      - database

  advertisementservice:
    image: balintjeszenszky/adsite:advertisementservice-latest
    restart: unless-stopped
    container_name: advertisementservice
    depends_on:
      - advertisementservice-db
      - rabbitmq
      - minio
    environment:
      - DATABASE_URL=advertisementservice-db:3306/advertisements
      - DB_USER=${MYSQL_ADVERTISEMENTSERVICE_USERNAME}
      - DB_PASS=${MYSQL_ADVERTISEMENTSERVICE_PASSWORD}
      - MINIO_URL=http://minio:9000
      - MINIO_USER=${MINIO_ROOT_USER}
      - MINIO_PASS=${MINIO_ROOT_PASSWORD}
      - PORT=8080
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - BID_API_URL=http://bidservice:8084/api/bid
    networks:
      - web
      - database
      - message
      - storage

  imageprocessingservice-db:
    image: postgres:15
    restart: unless-stopped
    container_name: imageprocessingservice-db
    volumes:
      - ./container-data/prod/imageprocessingservice-postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${IMAGEPROCESSING_POSTGRES_USER}
      - POSTGRES_PASSWORD=${IMAGEPROCESSING_POSTGRES_PASSWORD}
      - POSTGRES_DB=imageprocessing
    networks:
      - database

  imageprocessingservice:
    image: balintjeszenszky/adsite:imageprocessingservice-latest
    restart: unless-stopped
    container_name: imageprocessingservice
    depends_on:
      - imageprocessingservice-db
      - rabbitmq
      - minio
    environment:
      - DATABASE_URL=imageprocessingservice-db:5432/imageprocessing
      - DB_USER=${IMAGEPROCESSING_POSTGRES_USER}
      - DB_PASS=${IMAGEPROCESSING_POSTGRES_PASSWORD}
      - PORT=8080
      - MINIO_URL=http://minio:9000
      - MINIO_USER=${MINIO_ROOT_USER}
      - MINIO_PASS=${MINIO_ROOT_PASSWORD}
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
    networks:
      - web
      - database
      - message
      - storage
  
  webscraperservice-db:
    image: mongo:5
    restart: unless-stopped
    container_name: webscraperservice-db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_WEBSCRAPINGSERVICE_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_WEBSCRAPINGSERVICE_PASSWORD}
      - MONGO_INITDB_DATABASE=scraper
    volumes:
      - ./container-data/prod/webscraperservice-mongo:/data/db
    networks:
      - database

  webscraperservice:
    image: balintjeszenszky/adsite:webscraperservice-latest
    restart: unless-stopped
    container_name: webscraperservice
    depends_on:
      - webscraperservice-db
      - rabbitmq
    environment:
      - PORT=3000
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - MONGO_URL=webscraperservice-db/scraper
      - MONGO_USER=${MONGO_WEBSCRAPINGSERVICE_USERNAME}
      - MONGO_PASS=${MONGO_WEBSCRAPINGSERVICE_PASSWORD}
    networks:
      - web
      - database
      - message
  
  notificationservice-db:
    image: mongo:5
    restart: unless-stopped
    container_name: notificationservice-db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_NOTIFICATIONSERVICE_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_NOTIFICATIONSERVICE_PASSWORD}
      - MONGO_INITDB_DATABASE=notification
    volumes:
      - ./container-data/prod/notificationservice-mongo:/data/db
    networks:
      - database

  notificationservice:
    image: balintjeszenszky/adsite:notificationservice-latest
    restart: unless-stopped
    container_name: notificationservice
    depends_on:
      - notificationservice-db
      - rabbitmq
    environment:
      - PORT=3000
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - MONGO_URL=notificationservice-db/notification
      - MONGO_USER=${MONGO_NOTIFICATIONSERVICE_USERNAME}
      - MONGO_PASS=${MONGO_NOTIFICATIONSERVICE_PASSWORD}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - VAPID_PUBLIC_KEY=${VAPID_PUBLIC_KEY}
      - VAPID_PRIVATE_KEY=${VAPID_PRIVATE_KEY}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - BASEURL=http://localhost:8080
    networks:
      - web
      - database
      - message

  chatservice-db:
    image: mysql:8
    restart: unless-stopped
    container_name: chatservice-db
    volumes:
      - ./container-data/prod/chat-mysql:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=chat
      - MYSQL_ROOT_PASSWORD=${MYSQL_CHATSERVICE_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_CHATSERVICE_USERNAME}
      - MYSQL_PASSWORD=${MYSQL_CHATSERVICE_PASSWORD}
    networks:
      - database

  chatservice-redis:
    image: redis:7
    restart: unless-stopped
    container_name: chatservice-redis
    networks:
      - database

  chatservice:
    image: balintjeszenszky/adsite:chatservice-latest
    restart: unless-stopped
    container_name: chatservice
    depends_on:
      - chatservice-db
      - chatservice-redis
    environment:
      - PORT=3000
      - DB_URL=chatservice-db
      - DB_PORT=3306
      - DB_USER=${MYSQL_CHATSERVICE_USERNAME}
      - DB_PASS=${MYSQL_CHATSERVICE_PASSWORD}
      - DB_NAME=chat
      - REDIS_HOST=chatservice-redis
      - REDIS_PORT=6379
      - ADVERTISEMENT_SERVICE_INTERNAL_API_URL=http://advertisementservice:8080/api/advertisement/internal
      - ADVERTISEMENT_SERVICE_ADVERTISEMENT_EXISTS_PATH=/advertisement/exists
    networks:
      - web
      - database

  bidservice-db:
    image: postgres:15
    restart: unless-stopped
    container_name: bidservice-db
    volumes:
      - ./container-data/prod/bidservice-postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${BIDSERVICE_POSTGRES_USER}
      - POSTGRES_PASSWORD=${BIDERVICE_POSTGRES_PASSWORD}
      - POSTGRES_DB=bids
    networks:
      - database

  bidservice:
    image: balintjeszenszky/adsite:bidservice-latest
    restart: unless-stopped
    container_name: bidservice
    depends_on:
      - bidservice-db
    environment:
      - DATABASE_URL=bidservice-db:5432/bids
      - DB_USER=${BIDSERVICE_POSTGRES_USER}
      - DB_PASS=${BIDERVICE_POSTGRES_PASSWORD}
      - PORT=8080
      - USER_API_URL=http://userservice:8080/api/user
    networks:
      - web
      - database

  frontend:
    image: balintjeszenszky/adsite:frontend-latest
    restart: unless-stopped
    container_name: frontend
    networks:
      - web

networks:
  web:
    name: web
  database:
    name: database
  message:
    name: message
  storage:
    name: storage
